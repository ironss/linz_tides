#! /usr/bin/python3

import json
import os
import sys
import time

import tides_interpolate


verbose = True if os.getenv('MUNIN_DEBUG') == '1' else False
def verboselog(s):
    if verbose:
        sys.stderr.write('{}: {}\n'.format(plugin_name, s))


locations_fn = '/var/lib/munin/locations.json'
with open(locations_fn) as f:
    locations = json.load(f)

plugin_name = os.path.basename(sys.argv[0])
script_name, hostname = plugin_name.split('_')
location = locations[hostname]

attribution = "Location data provided by LINZ"


def fetch(hostname, location, timestamp):
    db = '/var/lib/munin/tides_db.sqlite3'
    portname = location['port'][1]
    port_name, ts, height = tides_interpolate.tides_interpolate(db, portname, timestamp)
    print('tide_height.value', height if height is not None else 'U')

def config(hostname, location):
    print("host_name {}.place".format(hostname))
    print("graph_title Tide")
    print("graph_info {att}".format(att=attribution)),
    print("graph_category marine")
    print("graph_vlabel Tide height (m)")
    print("tide_height.label Tide height (m)")


time_ts = time.time()

if len(sys.argv) > 1:
    cmd = sys.argv[1]
    if cmd == 'config':
        config(hostname, location)
        if True:  # if we support dirtyconfig
            fetch(hostname, location, time_ts)
        sys.exit(0)

    if cmd == 'suggest':
        sys.exit(0)

    verboselog('unknown argument "{}"'.format(cmd))
    exit(1)

fetch(hostname, location, time_ts)
